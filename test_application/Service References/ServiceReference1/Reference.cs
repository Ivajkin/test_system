//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18033
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.50826.0
// 
namespace test_application.ServiceReference1 {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Vopr", Namespace="http://schemas.datacontract.org/2004/07/test_system.Models", IsReference=true)]
    public partial class Vopr : test_application.ServiceReference1.EntityObject {
        
        private System.Nullable<System.Guid> ID_glavField;
        
        private System.Guid ID_voprField;
        
        private string Vopr1Field;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> ID_glav {
            get {
                return this.ID_glavField;
            }
            set {
                if ((this.ID_glavField.Equals(value) != true)) {
                    this.ID_glavField = value;
                    this.RaisePropertyChanged("ID_glav");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID_vopr {
            get {
                return this.ID_voprField;
            }
            set {
                if ((this.ID_voprField.Equals(value) != true)) {
                    this.ID_voprField = value;
                    this.RaisePropertyChanged("ID_vopr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Vopr1 {
            get {
                return this.Vopr1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Vopr1Field, value) != true)) {
                    this.Vopr1Field = value;
                    this.RaisePropertyChanged("Vopr1");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StructuralObject", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses", IsReference=true)]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(test_application.ServiceReference1.EntityObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(test_application.ServiceReference1.Otv))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(test_application.ServiceReference1.Vopr))]
    public partial class StructuralObject : object, System.ComponentModel.INotifyPropertyChanged {
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityObject", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses", IsReference=true)]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(test_application.ServiceReference1.Otv))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(test_application.ServiceReference1.Vopr))]
    public partial class EntityObject : test_application.ServiceReference1.StructuralObject {
        
        private test_application.ServiceReference1.EntityKey EntityKeyField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public test_application.ServiceReference1.EntityKey EntityKey {
            get {
                return this.EntityKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityKeyField, value) != true)) {
                    this.EntityKeyField = value;
                    this.RaisePropertyChanged("EntityKey");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Otv", Namespace="http://schemas.datacontract.org/2004/07/test_system.Models", IsReference=true)]
    public partial class Otv : test_application.ServiceReference1.EntityObject {
        
        private System.Nullable<int> BoolField;
        
        private System.Guid ID_otvField;
        
        private System.Nullable<System.Guid> ID_voprField;
        
        private string Otv1Field;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Bool {
            get {
                return this.BoolField;
            }
            set {
                if ((this.BoolField.Equals(value) != true)) {
                    this.BoolField = value;
                    this.RaisePropertyChanged("Bool");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID_otv {
            get {
                return this.ID_otvField;
            }
            set {
                if ((this.ID_otvField.Equals(value) != true)) {
                    this.ID_otvField = value;
                    this.RaisePropertyChanged("ID_otv");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> ID_vopr {
            get {
                return this.ID_voprField;
            }
            set {
                if ((this.ID_voprField.Equals(value) != true)) {
                    this.ID_voprField = value;
                    this.RaisePropertyChanged("ID_vopr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Otv1 {
            get {
                return this.Otv1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Otv1Field, value) != true)) {
                    this.Otv1Field = value;
                    this.RaisePropertyChanged("Otv1");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityKey", Namespace="http://schemas.datacontract.org/2004/07/System.Data", IsReference=true)]
    public partial class EntityKey : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string EntityContainerNameField;
        
        private System.Collections.ObjectModel.ObservableCollection<test_application.ServiceReference1.EntityKeyMember> EntityKeyValuesField;
        
        private string EntitySetNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntityContainerName {
            get {
                return this.EntityContainerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityContainerNameField, value) != true)) {
                    this.EntityContainerNameField = value;
                    this.RaisePropertyChanged("EntityContainerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<test_application.ServiceReference1.EntityKeyMember> EntityKeyValues {
            get {
                return this.EntityKeyValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityKeyValuesField, value) != true)) {
                    this.EntityKeyValuesField = value;
                    this.RaisePropertyChanged("EntityKeyValues");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntitySetName {
            get {
                return this.EntitySetNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EntitySetNameField, value) != true)) {
                    this.EntitySetNameField = value;
                    this.RaisePropertyChanged("EntitySetName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityKeyMember", Namespace="http://schemas.datacontract.org/2004/07/System.Data")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(test_application.ServiceReference1.DatabaseSilverlightServiceTestData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(test_application.ServiceReference1.DatabaseSilverlightServiceDNSInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<test_application.ServiceReference1.Vopr>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(test_application.ServiceReference1.Vopr))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<test_application.ServiceReference1.Otv>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(test_application.ServiceReference1.Otv))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(test_application.ServiceReference1.EntityKey))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<test_application.ServiceReference1.EntityKeyMember>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(test_application.ServiceReference1.EntityObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(test_application.ServiceReference1.StructuralObject))]
    public partial class EntityKeyMember : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string KeyField;
        
        private object ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key {
            get {
                return this.KeyField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyField, value) != true)) {
                    this.KeyField = value;
                    this.RaisePropertyChanged("Key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DatabaseSilverlightService.TestData", Namespace="http://schemas.datacontract.org/2004/07/test_system")]
    public partial class DatabaseSilverlightServiceTestData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Guid glavaIDField;
        
        private string glavaNameField;
        
        private bool isControlModeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid glavaID {
            get {
                return this.glavaIDField;
            }
            set {
                if ((this.glavaIDField.Equals(value) != true)) {
                    this.glavaIDField = value;
                    this.RaisePropertyChanged("glavaID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string glavaName {
            get {
                return this.glavaNameField;
            }
            set {
                if ((object.ReferenceEquals(this.glavaNameField, value) != true)) {
                    this.glavaNameField = value;
                    this.RaisePropertyChanged("glavaName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isControlMode {
            get {
                return this.isControlModeField;
            }
            set {
                if ((this.isControlModeField.Equals(value) != true)) {
                    this.isControlModeField = value;
                    this.RaisePropertyChanged("isControlMode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DatabaseSilverlightService.DNSInfo", Namespace="http://schemas.datacontract.org/2004/07/test_system")]
    public partial class DatabaseSilverlightServiceDNSInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ComputerField;
        
        private string IP_addressField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Computer {
            get {
                return this.ComputerField;
            }
            set {
                if ((object.ReferenceEquals(this.ComputerField, value) != true)) {
                    this.ComputerField = value;
                    this.RaisePropertyChanged("Computer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IP_address {
            get {
                return this.IP_addressField;
            }
            set {
                if ((object.ReferenceEquals(this.IP_addressField, value) != true)) {
                    this.IP_addressField = value;
                    this.RaisePropertyChanged("IP_address");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="", ConfigurationName="ServiceReference1.DatabaseSilverlightService")]
    public interface DatabaseSilverlightService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:DatabaseSilverlightService/GetVoprForGlav", ReplyAction="urn:DatabaseSilverlightService/GetVoprForGlavResponse")]
        System.IAsyncResult BeginGetVoprForGlav(System.Guid glavID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<test_application.ServiceReference1.Vopr> EndGetVoprForGlav(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:DatabaseSilverlightService/GetTestData", ReplyAction="urn:DatabaseSilverlightService/GetTestDataResponse")]
        System.IAsyncResult BeginGetTestData(System.AsyncCallback callback, object asyncState);
        
        test_application.ServiceReference1.DatabaseSilverlightServiceTestData EndGetTestData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:DatabaseSilverlightService/GetOtvet", ReplyAction="urn:DatabaseSilverlightService/GetOtvetResponse")]
        System.IAsyncResult BeginGetOtvet(System.Guid id, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<test_application.ServiceReference1.Otv> EndGetOtvet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:DatabaseSilverlightService/GetDNSInfo", ReplyAction="urn:DatabaseSilverlightService/GetDNSInfoResponse")]
        System.IAsyncResult BeginGetDNSInfo(System.AsyncCallback callback, object asyncState);
        
        test_application.ServiceReference1.DatabaseSilverlightServiceDNSInfo EndGetDNSInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:DatabaseSilverlightService/AddStatistic", ReplyAction="urn:DatabaseSilverlightService/AddStatisticResponse")]
        System.IAsyncResult BeginAddStatistic(System.Guid ID, string Date, string Time, string Computer, string IP_address, int Balls, int Tasks, int Answers, string Glava, System.AsyncCallback callback, object asyncState);
        
        void EndAddStatistic(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface DatabaseSilverlightServiceChannel : test_application.ServiceReference1.DatabaseSilverlightService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetVoprForGlavCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetVoprForGlavCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<test_application.ServiceReference1.Vopr> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<test_application.ServiceReference1.Vopr>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTestDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTestDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public test_application.ServiceReference1.DatabaseSilverlightServiceTestData Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((test_application.ServiceReference1.DatabaseSilverlightServiceTestData)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetOtvetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetOtvetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<test_application.ServiceReference1.Otv> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<test_application.ServiceReference1.Otv>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDNSInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDNSInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public test_application.ServiceReference1.DatabaseSilverlightServiceDNSInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((test_application.ServiceReference1.DatabaseSilverlightServiceDNSInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DatabaseSilverlightServiceClient : System.ServiceModel.ClientBase<test_application.ServiceReference1.DatabaseSilverlightService>, test_application.ServiceReference1.DatabaseSilverlightService {
        
        private BeginOperationDelegate onBeginGetVoprForGlavDelegate;
        
        private EndOperationDelegate onEndGetVoprForGlavDelegate;
        
        private System.Threading.SendOrPostCallback onGetVoprForGlavCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTestDataDelegate;
        
        private EndOperationDelegate onEndGetTestDataDelegate;
        
        private System.Threading.SendOrPostCallback onGetTestDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetOtvetDelegate;
        
        private EndOperationDelegate onEndGetOtvetDelegate;
        
        private System.Threading.SendOrPostCallback onGetOtvetCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDNSInfoDelegate;
        
        private EndOperationDelegate onEndGetDNSInfoDelegate;
        
        private System.Threading.SendOrPostCallback onGetDNSInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddStatisticDelegate;
        
        private EndOperationDelegate onEndAddStatisticDelegate;
        
        private System.Threading.SendOrPostCallback onAddStatisticCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public DatabaseSilverlightServiceClient() {
        }
        
        public DatabaseSilverlightServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DatabaseSilverlightServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DatabaseSilverlightServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DatabaseSilverlightServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetVoprForGlavCompletedEventArgs> GetVoprForGlavCompleted;
        
        public event System.EventHandler<GetTestDataCompletedEventArgs> GetTestDataCompleted;
        
        public event System.EventHandler<GetOtvetCompletedEventArgs> GetOtvetCompleted;
        
        public event System.EventHandler<GetDNSInfoCompletedEventArgs> GetDNSInfoCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddStatisticCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult test_application.ServiceReference1.DatabaseSilverlightService.BeginGetVoprForGlav(System.Guid glavID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetVoprForGlav(glavID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<test_application.ServiceReference1.Vopr> test_application.ServiceReference1.DatabaseSilverlightService.EndGetVoprForGlav(System.IAsyncResult result) {
            return base.Channel.EndGetVoprForGlav(result);
        }
        
        private System.IAsyncResult OnBeginGetVoprForGlav(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid glavID = ((System.Guid)(inValues[0]));
            return ((test_application.ServiceReference1.DatabaseSilverlightService)(this)).BeginGetVoprForGlav(glavID, callback, asyncState);
        }
        
        private object[] OnEndGetVoprForGlav(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<test_application.ServiceReference1.Vopr> retVal = ((test_application.ServiceReference1.DatabaseSilverlightService)(this)).EndGetVoprForGlav(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetVoprForGlavCompleted(object state) {
            if ((this.GetVoprForGlavCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetVoprForGlavCompleted(this, new GetVoprForGlavCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetVoprForGlavAsync(System.Guid glavID) {
            this.GetVoprForGlavAsync(glavID, null);
        }
        
        public void GetVoprForGlavAsync(System.Guid glavID, object userState) {
            if ((this.onBeginGetVoprForGlavDelegate == null)) {
                this.onBeginGetVoprForGlavDelegate = new BeginOperationDelegate(this.OnBeginGetVoprForGlav);
            }
            if ((this.onEndGetVoprForGlavDelegate == null)) {
                this.onEndGetVoprForGlavDelegate = new EndOperationDelegate(this.OnEndGetVoprForGlav);
            }
            if ((this.onGetVoprForGlavCompletedDelegate == null)) {
                this.onGetVoprForGlavCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetVoprForGlavCompleted);
            }
            base.InvokeAsync(this.onBeginGetVoprForGlavDelegate, new object[] {
                        glavID}, this.onEndGetVoprForGlavDelegate, this.onGetVoprForGlavCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult test_application.ServiceReference1.DatabaseSilverlightService.BeginGetTestData(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTestData(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        test_application.ServiceReference1.DatabaseSilverlightServiceTestData test_application.ServiceReference1.DatabaseSilverlightService.EndGetTestData(System.IAsyncResult result) {
            return base.Channel.EndGetTestData(result);
        }
        
        private System.IAsyncResult OnBeginGetTestData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((test_application.ServiceReference1.DatabaseSilverlightService)(this)).BeginGetTestData(callback, asyncState);
        }
        
        private object[] OnEndGetTestData(System.IAsyncResult result) {
            test_application.ServiceReference1.DatabaseSilverlightServiceTestData retVal = ((test_application.ServiceReference1.DatabaseSilverlightService)(this)).EndGetTestData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTestDataCompleted(object state) {
            if ((this.GetTestDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTestDataCompleted(this, new GetTestDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTestDataAsync() {
            this.GetTestDataAsync(null);
        }
        
        public void GetTestDataAsync(object userState) {
            if ((this.onBeginGetTestDataDelegate == null)) {
                this.onBeginGetTestDataDelegate = new BeginOperationDelegate(this.OnBeginGetTestData);
            }
            if ((this.onEndGetTestDataDelegate == null)) {
                this.onEndGetTestDataDelegate = new EndOperationDelegate(this.OnEndGetTestData);
            }
            if ((this.onGetTestDataCompletedDelegate == null)) {
                this.onGetTestDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTestDataCompleted);
            }
            base.InvokeAsync(this.onBeginGetTestDataDelegate, null, this.onEndGetTestDataDelegate, this.onGetTestDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult test_application.ServiceReference1.DatabaseSilverlightService.BeginGetOtvet(System.Guid id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetOtvet(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<test_application.ServiceReference1.Otv> test_application.ServiceReference1.DatabaseSilverlightService.EndGetOtvet(System.IAsyncResult result) {
            return base.Channel.EndGetOtvet(result);
        }
        
        private System.IAsyncResult OnBeginGetOtvet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid id = ((System.Guid)(inValues[0]));
            return ((test_application.ServiceReference1.DatabaseSilverlightService)(this)).BeginGetOtvet(id, callback, asyncState);
        }
        
        private object[] OnEndGetOtvet(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<test_application.ServiceReference1.Otv> retVal = ((test_application.ServiceReference1.DatabaseSilverlightService)(this)).EndGetOtvet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetOtvetCompleted(object state) {
            if ((this.GetOtvetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetOtvetCompleted(this, new GetOtvetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetOtvetAsync(System.Guid id) {
            this.GetOtvetAsync(id, null);
        }
        
        public void GetOtvetAsync(System.Guid id, object userState) {
            if ((this.onBeginGetOtvetDelegate == null)) {
                this.onBeginGetOtvetDelegate = new BeginOperationDelegate(this.OnBeginGetOtvet);
            }
            if ((this.onEndGetOtvetDelegate == null)) {
                this.onEndGetOtvetDelegate = new EndOperationDelegate(this.OnEndGetOtvet);
            }
            if ((this.onGetOtvetCompletedDelegate == null)) {
                this.onGetOtvetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetOtvetCompleted);
            }
            base.InvokeAsync(this.onBeginGetOtvetDelegate, new object[] {
                        id}, this.onEndGetOtvetDelegate, this.onGetOtvetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult test_application.ServiceReference1.DatabaseSilverlightService.BeginGetDNSInfo(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDNSInfo(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        test_application.ServiceReference1.DatabaseSilverlightServiceDNSInfo test_application.ServiceReference1.DatabaseSilverlightService.EndGetDNSInfo(System.IAsyncResult result) {
            return base.Channel.EndGetDNSInfo(result);
        }
        
        private System.IAsyncResult OnBeginGetDNSInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((test_application.ServiceReference1.DatabaseSilverlightService)(this)).BeginGetDNSInfo(callback, asyncState);
        }
        
        private object[] OnEndGetDNSInfo(System.IAsyncResult result) {
            test_application.ServiceReference1.DatabaseSilverlightServiceDNSInfo retVal = ((test_application.ServiceReference1.DatabaseSilverlightService)(this)).EndGetDNSInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDNSInfoCompleted(object state) {
            if ((this.GetDNSInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDNSInfoCompleted(this, new GetDNSInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDNSInfoAsync() {
            this.GetDNSInfoAsync(null);
        }
        
        public void GetDNSInfoAsync(object userState) {
            if ((this.onBeginGetDNSInfoDelegate == null)) {
                this.onBeginGetDNSInfoDelegate = new BeginOperationDelegate(this.OnBeginGetDNSInfo);
            }
            if ((this.onEndGetDNSInfoDelegate == null)) {
                this.onEndGetDNSInfoDelegate = new EndOperationDelegate(this.OnEndGetDNSInfo);
            }
            if ((this.onGetDNSInfoCompletedDelegate == null)) {
                this.onGetDNSInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDNSInfoCompleted);
            }
            base.InvokeAsync(this.onBeginGetDNSInfoDelegate, null, this.onEndGetDNSInfoDelegate, this.onGetDNSInfoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult test_application.ServiceReference1.DatabaseSilverlightService.BeginAddStatistic(System.Guid ID, string Date, string Time, string Computer, string IP_address, int Balls, int Tasks, int Answers, string Glava, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddStatistic(ID, Date, Time, Computer, IP_address, Balls, Tasks, Answers, Glava, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void test_application.ServiceReference1.DatabaseSilverlightService.EndAddStatistic(System.IAsyncResult result) {
            base.Channel.EndAddStatistic(result);
        }
        
        private System.IAsyncResult OnBeginAddStatistic(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid ID = ((System.Guid)(inValues[0]));
            string Date = ((string)(inValues[1]));
            string Time = ((string)(inValues[2]));
            string Computer = ((string)(inValues[3]));
            string IP_address = ((string)(inValues[4]));
            int Balls = ((int)(inValues[5]));
            int Tasks = ((int)(inValues[6]));
            int Answers = ((int)(inValues[7]));
            string Glava = ((string)(inValues[8]));
            return ((test_application.ServiceReference1.DatabaseSilverlightService)(this)).BeginAddStatistic(ID, Date, Time, Computer, IP_address, Balls, Tasks, Answers, Glava, callback, asyncState);
        }
        
        private object[] OnEndAddStatistic(System.IAsyncResult result) {
            ((test_application.ServiceReference1.DatabaseSilverlightService)(this)).EndAddStatistic(result);
            return null;
        }
        
        private void OnAddStatisticCompleted(object state) {
            if ((this.AddStatisticCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddStatisticCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddStatisticAsync(System.Guid ID, string Date, string Time, string Computer, string IP_address, int Balls, int Tasks, int Answers, string Glava) {
            this.AddStatisticAsync(ID, Date, Time, Computer, IP_address, Balls, Tasks, Answers, Glava, null);
        }
        
        public void AddStatisticAsync(System.Guid ID, string Date, string Time, string Computer, string IP_address, int Balls, int Tasks, int Answers, string Glava, object userState) {
            if ((this.onBeginAddStatisticDelegate == null)) {
                this.onBeginAddStatisticDelegate = new BeginOperationDelegate(this.OnBeginAddStatistic);
            }
            if ((this.onEndAddStatisticDelegate == null)) {
                this.onEndAddStatisticDelegate = new EndOperationDelegate(this.OnEndAddStatistic);
            }
            if ((this.onAddStatisticCompletedDelegate == null)) {
                this.onAddStatisticCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddStatisticCompleted);
            }
            base.InvokeAsync(this.onBeginAddStatisticDelegate, new object[] {
                        ID,
                        Date,
                        Time,
                        Computer,
                        IP_address,
                        Balls,
                        Tasks,
                        Answers,
                        Glava}, this.onEndAddStatisticDelegate, this.onAddStatisticCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override test_application.ServiceReference1.DatabaseSilverlightService CreateChannel() {
            return new DatabaseSilverlightServiceClientChannel(this);
        }
        
        private class DatabaseSilverlightServiceClientChannel : ChannelBase<test_application.ServiceReference1.DatabaseSilverlightService>, test_application.ServiceReference1.DatabaseSilverlightService {
            
            public DatabaseSilverlightServiceClientChannel(System.ServiceModel.ClientBase<test_application.ServiceReference1.DatabaseSilverlightService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetVoprForGlav(System.Guid glavID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = glavID;
                System.IAsyncResult _result = base.BeginInvoke("GetVoprForGlav", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<test_application.ServiceReference1.Vopr> EndGetVoprForGlav(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<test_application.ServiceReference1.Vopr> _result = ((System.Collections.ObjectModel.ObservableCollection<test_application.ServiceReference1.Vopr>)(base.EndInvoke("GetVoprForGlav", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetTestData(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetTestData", _args, callback, asyncState);
                return _result;
            }
            
            public test_application.ServiceReference1.DatabaseSilverlightServiceTestData EndGetTestData(System.IAsyncResult result) {
                object[] _args = new object[0];
                test_application.ServiceReference1.DatabaseSilverlightServiceTestData _result = ((test_application.ServiceReference1.DatabaseSilverlightServiceTestData)(base.EndInvoke("GetTestData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetOtvet(System.Guid id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = id;
                System.IAsyncResult _result = base.BeginInvoke("GetOtvet", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<test_application.ServiceReference1.Otv> EndGetOtvet(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<test_application.ServiceReference1.Otv> _result = ((System.Collections.ObjectModel.ObservableCollection<test_application.ServiceReference1.Otv>)(base.EndInvoke("GetOtvet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetDNSInfo(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetDNSInfo", _args, callback, asyncState);
                return _result;
            }
            
            public test_application.ServiceReference1.DatabaseSilverlightServiceDNSInfo EndGetDNSInfo(System.IAsyncResult result) {
                object[] _args = new object[0];
                test_application.ServiceReference1.DatabaseSilverlightServiceDNSInfo _result = ((test_application.ServiceReference1.DatabaseSilverlightServiceDNSInfo)(base.EndInvoke("GetDNSInfo", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAddStatistic(System.Guid ID, string Date, string Time, string Computer, string IP_address, int Balls, int Tasks, int Answers, string Glava, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[9];
                _args[0] = ID;
                _args[1] = Date;
                _args[2] = Time;
                _args[3] = Computer;
                _args[4] = IP_address;
                _args[5] = Balls;
                _args[6] = Tasks;
                _args[7] = Answers;
                _args[8] = Glava;
                System.IAsyncResult _result = base.BeginInvoke("AddStatistic", _args, callback, asyncState);
                return _result;
            }
            
            public void EndAddStatistic(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("AddStatistic", _args, result);
            }
        }
    }
}
